{"version":3,"file":"bundle.js","sources":["../src/components/SegmentedPicker/SegmentedPickerPropTypes.ts","../src/config/constants.ts","../src/components/SegmentedPicker/SegmentedPickerStyles.ts","../src/components/Toolbar/ToolbarStyles.ts","../src/components/Toolbar/Toolbar.tsx","../src/components/SelectionMarker/SelectionMarkerStyles.ts","../src/components/SelectionMarker/SelectionMarker.tsx","../src/components/UIPicker/index.ts","../src/services/Cache/Cache.ts","../src/services/PromiseFactory/PromiseFactory.ts","../src/services/UIPickerManager/UIPickerManager.ts","../src/components/SegmentedPicker/SegmentedPicker.tsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport const defaultProps = {\n  native: false,\n  options: [],\n  visible: false,\n  defaultSelections: {},\n  size: 0.45,\n  confirmText: 'Done',\n  nativeTestID: undefined,\n  confirmTextColor: '#0A84FF',\n  pickerItemTextColor: '#282828',\n  toolbarBackgroundColor: '#FAFAF8',\n  toolbarBorderColor: '#E7E7E7',\n  selectionBackgroundColor: '#F8F8F8',\n  selectionBorderColor: '#C9C9C9',\n  backgroundColor: '#FFFFFF',\n  onValueChange: () => {},\n  onCancel: () => {},\n  onConfirm: () => {},\n  textConfirmStyle: {},\n  textCancelStyle: {},\n  textTitleStyle: {},\n  toolbarContainerStyle: {},\n  pickerContainerStyle: {},\n  cancelText: '',\n  title: '',\n};\n\nexport const propTypes = {\n  // Core Props\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string.isRequired,\n      items: PropTypes.arrayOf(\n        PropTypes.shape({\n          label: PropTypes.string.isRequired,\n          value: PropTypes.string.isRequired,\n          key: PropTypes.string,\n          testID: PropTypes.string,\n        }),\n      ).isRequired,\n      testID: PropTypes.string,\n      flex: PropTypes.number,\n    }),\n  ).isRequired,\n  visible: PropTypes.bool,\n  defaultSelections: PropTypes.objectOf(\n    (propValue, key, componentName, location, propName) => {\n      const column = propValue[key];\n      return column && String(column) !== column\n        ? new Error(\n            `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`.` +\n              \" Must be in the format: `{column1: 'value', column2: 'value', ...}`\",\n          )\n        : null;\n    },\n  ),\n  size: (props: any, propName: 'size', componentName: string) => {\n    const value = props[propName];\n    if (value === undefined) return null;\n    return value < 0 || value > 1\n      ? new Error(\n          `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`.` +\n            ' Must be a floating point between 0-1 representing the screen percentage to cover.' +\n            ' The default value is `0.45` (eg 45%).',\n        )\n      : null;\n  },\n  confirmText: PropTypes.string,\n  nativeTestID: PropTypes.string,\n  // Styling\n  confirmTextColor: PropTypes.string,\n  pickerItemTextColor: PropTypes.string,\n  toolbarBackgroundColor: PropTypes.string,\n  toolbarBorderColor: PropTypes.string,\n  selectionBackgroundColor: PropTypes.string,\n  selectionBorderColor: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  textConfirmStyle: PropTypes.object,\n  textCancelStyle: PropTypes.object,\n  textTitleStyle: PropTypes.object,\n  cancelText: PropTypes.string,\n  title: PropTypes.string,\n  toolbarContainerStyle: PropTypes.object,\n  pickerContainerStyle: PropTypes.object,\n  extentionComponent: PropTypes.node,\n  // Events\n  onValueChange: PropTypes.func,\n  onCancel: PropTypes.func,\n  onConfirm: PropTypes.func,\n};\n","/**\n * Time in milliseconds for the list to fade in and out when displayed.\n */\nexport const ANIMATION_TIME = 300;\n\n/**\n * Fixed sizing for list items and other UI elements.\n */\nexport const GUTTER_WIDTH = 18;\nexport const GUTTER_HEIGHT = 5;\nexport const ITEM_HEIGHTS = { ios: 46, default: 50 };\nexport const TEXT_CORRECTION = 2;\n\n/**\n * Constants used for automatically generated Test ID's (used for E2E testing).\n */\nexport const TEST_IDS = {\n  PICKER: 'SEGMENTED_PICKER',\n  CONFIRM_BUTTON: 'SEGMENTED_PICKER_CONFIRM',\n  CLOSE_AREA: 'SEGMENTED_PICKER_CLOSE_AREA',\n};\n\n/**\n * Measurement and internal lifecycle tracking states.\n */\nexport const TRACKING = {\n  FLAT_LIST_REF: 'FLAT_LIST_REF_',\n  LAST_SCROLL_OFFSET: 'LAST_SCROLL_OFFSET_',\n  SCROLL_DIRECTION: 'SCROLL_DIRECTION_',\n  IS_DRAGGING: 'IS_DRAGGING_',\n  IS_MOMENTUM_SCROLLING: 'IS_MOMENTUM_SCROLLING_',\n  IS_DIRTY: 'IS_DIRTY_',\n};\n","import { StyleSheet, Platform, Dimensions } from 'react-native';\nimport {\n  GUTTER_WIDTH,\n  GUTTER_HEIGHT,\n  ITEM_HEIGHTS,\n  TEXT_CORRECTION,\n} from '../../config/constants';\n\nconst ITEM_HEIGHT = Platform.select(ITEM_HEIGHTS);\n\nexport default StyleSheet.create({\n  modalContainer: {\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'rgba(0, 0, 0, 0.7)',\n    flex: 1,\n    flexDirection: 'column',\n  },\n\n  closeableContainer: {\n    width: '100%',\n  },\n\n  pickerContainer: {\n    width: '100%',\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n  },\n\n  selectableArea: {\n    flex: 1,\n    alignSelf: 'stretch',\n  },\n\n  pickerColumns: {\n    flex: 1,\n    flexDirection: 'row',\n    paddingTop: GUTTER_HEIGHT,\n    paddingRight: 0,\n    paddingBottom: GUTTER_HEIGHT,\n    paddingLeft: GUTTER_WIDTH,\n  },\n\n  pickerColumn: {\n    flex: 1,\n    marginRight: 12,\n    position: 'relative',\n  },\n\n  pickerList: {\n    width: '100%',\n    height: 'auto',\n  },\n\n  pickerItem: {\n    width: '100%',\n    height: ITEM_HEIGHT,\n    justifyContent: 'center',\n  },\n\n  pickerItemText: {\n    fontSize: 15,\n    paddingTop: 5,\n    paddingRight: 0,\n    paddingBottom: TEXT_CORRECTION + 5,\n    paddingLeft: 0,\n    textAlign: 'center',\n  },\n\n  nativePickerContainer: {\n    width: Dimensions.get('window').width - (GUTTER_WIDTH * 2),\n    height: '100%',\n    marginLeft: GUTTER_WIDTH,\n  },\n\n  nativePicker: {\n    width: '100%',\n    height: '100%',\n  },\n});\n","import { StyleSheet } from 'react-native';\nimport { GUTTER_WIDTH, TEXT_CORRECTION } from '../../config/constants';\n\nexport default StyleSheet.create({\n  toolbarContainer: {\n    width: '100%',\n    height: 42,\n    borderBottomWidth: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    alignSelf: 'flex-start',\n  },\n\n  toolbarConfirmContainer: {\n    height: '100%',\n    justifyContent: 'center',\n  },\n\n  toolbarConfirmText: {\n    fontWeight: 'bold',\n    fontSize: 15,\n    paddingTop: 0,\n    paddingRight: GUTTER_WIDTH,\n    paddingBottom: TEXT_CORRECTION,\n    paddingLeft: 0,\n  },\n});\n","import React, { ReactElement } from 'react';\nimport {\n  View,\n  TouchableOpacity,\n  Text,\n  TextStyle,\n  ViewStyle,\n} from 'react-native';\nimport styles from './ToolbarStyles';\nimport { TEST_IDS } from '../../config/constants';\n\ninterface Props {\n  confirmText: string;\n  cancelText: string;\n  confirmTextColor: string;\n  toolbarBackground: string;\n  toolbarBorderColor: string;\n  textConfirmStyle?: TextStyle;\n  textCancelStyle?: TextStyle;\n  textTitleStyle?: TextStyle;\n  toolbarContainerStyle?: ViewStyle;\n  title?: string;\n  onConfirm: () => void;\n  onCancel: () => void;\n}\n\n/**\n * Top action bar that displays above the picker modal which allows a user to confirm\n * their selections and close the modal.\n */\nexport default ({\n  confirmText,\n  cancelText,\n  toolbarBackground,\n  toolbarBorderColor,\n  textCancelStyle,\n  textConfirmStyle,\n  textTitleStyle,\n  title,\n  toolbarContainerStyle,\n  onConfirm,\n  onCancel,\n}: Props): ReactElement => (\n  <View\n    style={[\n      styles.toolbarContainer,\n      {\n        backgroundColor: toolbarBackground,\n        borderBottomColor: toolbarBorderColor,\n      },\n      toolbarContainerStyle,\n    ]}>\n    <TouchableOpacity\n      activeOpacity={0.4}\n      onPress={onCancel}\n      testID={TEST_IDS.CONFIRM_BUTTON}>\n      <View style={styles.toolbarConfirmContainer}>\n        <Text style={[styles.toolbarConfirmText, textCancelStyle]}>\n          {cancelText}\n        </Text>\n      </View>\n    </TouchableOpacity>\n    {!!title && <Text style={textTitleStyle}>{title}</Text>}\n    <TouchableOpacity\n      activeOpacity={0.4}\n      onPress={onConfirm}\n      testID={TEST_IDS.CONFIRM_BUTTON}>\n      <View style={styles.toolbarConfirmContainer}>\n        <Text style={[styles.toolbarConfirmText, textConfirmStyle]}>\n          {confirmText}\n        </Text>\n      </View>\n    </TouchableOpacity>\n  </View>\n);\n","import { StyleSheet, Platform } from 'react-native';\nimport { ITEM_HEIGHTS, GUTTER_WIDTH } from '../../config/constants';\n\nconst ITEM_HEIGHT = Platform.select(ITEM_HEIGHTS);\n\nexport default StyleSheet.create({\n  selectionMarkerContainer: {\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingLeft: GUTTER_WIDTH,\n    paddingRight: GUTTER_WIDTH,\n  },\n\n  // Eliminates border rendering inconsistencies between iOS & Android\n  selectionMarkerBorder: {\n    width: '100%',\n    height: Platform.select({ ios: 0.6, android: 0.7 }),\n  },\n\n  selectionMarker: {\n    width: '100%',\n    height: ITEM_HEIGHT,\n  },\n});\n","import React, { ReactElement } from 'react';\nimport { View } from 'react-native';\nimport styles from './SelectionMarkerStyles';\n\ninterface Props {\n  backgroundColor: string;\n  borderColor: string;\n}\n\n/**\n * Horizontal bar used to indicate the current picker selections.\n */\nexport default ({\n  backgroundColor,\n  borderColor,\n}: Props): ReactElement => (\n  <View style={styles.selectionMarkerContainer}>\n    <View\n      style={[\n        styles.selectionMarkerBorder,\n        { backgroundColor: borderColor },\n      ]}\n    />\n    <View style={[styles.selectionMarker, { backgroundColor }]} />\n    <View\n      style={[\n        styles.selectionMarkerBorder,\n        { backgroundColor: borderColor },\n      ]}\n    />\n  </View>\n);\n","import { requireNativeComponent } from 'react-native';\n\nexport default requireNativeComponent('UIPicker');\n","export type StoreItem = any;\n\nexport interface Store {\n  [key: string]: any;\n}\n\n/**\n * This class is utilised by the main Segmented Picker component as a fast synchronous\n * cache alternative to the regular React component state mechanism.\n */\nexport default class Cache {\n  store: Store;\n\n  constructor(initialState: Store = {}) {\n    this.store = {\n      ...initialState,\n    };\n  }\n\n  /**\n   * Returns the entire store value without any modification.\n   * @return {Store}\n   */\n  get current(): Store {\n    return this.store;\n  }\n\n  /**\n   * Attempts to safely fetch the cached value for the specified key.\n   * @param {string} key\n   * @return {StoreItem | null}\n   */\n  get = (key: string): StoreItem | null => {\n    if (key in this.store) {\n      return this.store[key];\n    }\n    return null;\n  };\n\n  /**\n   * Creates (or replaces) a value in the cache for the specified key.\n   * @param {string} key\n   * @param {StoreItem} value\n   * @return {void}\n   */\n  set = (key: string, value: StoreItem): void => {\n    this.store[key] = value;\n  };\n\n  /**\n   * Completely resets the cache to a blank state.\n   * @return {void}\n   */\n  purge = (): void => {\n    this.store = {};\n  };\n}\n","interface PromiseExecutor {\n  resolve: any;\n  reject: any;\n}\n\n/**\n * This class is used to store promises against an incrementing integer so that the\n * promise can be resolved from outside the context of the original block.\n *\n * An example of this is when React needs to request asynchronous data from a Native\n * UI Component. Communication to UI components across the React Native bridge is\n * limited to 1-way, so the value must be emitted afterwards using an event which is\n * not immediately available to the original JavaScript method. So to get around this\n * limitation, we empower the React event subscription to resolve the promise.\n */\nexport default class PromiseFactory {\n  private promises: Map<Number, PromiseExecutor> = new Map();\n  private nextPromiseId: number = 0;\n\n  /**\n   * Add a promise to the internal store and receive it's unique `id`.\n   * @param {PromiseExecutor} e\n   * @return {number} Unique `id` for the added promise.\n   */\n  add = (e: PromiseExecutor): number => {\n    const id = Number(this.nextPromiseId);\n    this.promises.set(id, e);\n    this.nextPromiseId += 1;\n    return id;\n  };\n\n  /**\n   * Get a promise by it's `id`.\n   * @param {number} id\n   * @return {PromiseExecutor | undefined}\n   */\n  get = (id: number): PromiseExecutor | undefined => this.promises.get(id);\n\n  /**\n   * Completely deletes a promise from the factory using it's unique `id`.\n   * @param {number} id\n   * @return {boolean}\n   */\n  delete = (id: number): boolean => this.promises.delete(id);\n}\n","import React from 'react';\nimport { UIManager, findNodeHandle } from 'react-native';\nimport PromiseFactory from '../PromiseFactory';\nimport { UIPickerSelectionsEvent } from '../../config/interfaces';\n\ninterface Selections {\n  [column: string]: string;\n}\n\n/**\n * Methods to control and observe the native iOS `UIPickerView`.\n */\nexport default class UIPickerManager {\n  private ref: React.RefObject<any> = React.createRef();\n  private promiseFactory: PromiseFactory = new PromiseFactory();\n\n  get reactRef(): React.RefObject<any> {\n    return this.ref;\n  }\n\n  /**\n   * Programmatically select an index in the picker.\n   * @param {number} index: List index of the picker item to select.\n   * @param {string} columnKey: Unique key of the column to select.\n   * @param {boolean = true} animated: Should the selection \"snap\" or animate smoothly into place?\n   * @return {void}\n   */\n  selectIndex = (index: number, column: string, animated: boolean = true): void => {\n    if (this.ref.current) {\n      UIManager.dispatchViewManagerCommand(\n        findNodeHandle(this.ref.current),\n        (UIManager as any).UIPicker.Commands.selectIndex,\n        [index, column, animated],\n      );\n    }\n  };\n\n  /**\n   * Returns the current picker item selections as the appear on the user's screen.\n   * @return {Promise<Selections>}\n   */\n  getCurrentSelections = (): Promise<Selections> => {\n    if (!this.ref.current) {\n      return Promise.resolve({});\n    }\n    const promise: Promise<Selections> = new Promise((resolve, reject) => {\n      const pid = this.promiseFactory.add({ resolve, reject });\n      UIManager.dispatchViewManagerCommand(\n        findNodeHandle(this.ref.current),\n        (UIManager as any).UIPicker.Commands.emitSelections,\n        [pid],\n      );\n    });\n    return promise;\n  };\n\n  /**\n   * Ingests emitted selections from the native module and resolves the original promise\n   * from `getCurrentSelections` using it's stored resolver in the Promise Factory.\n   * @param {UIPickerSelectionsEvent}\n   * @return {void}\n   */\n  ingestSelections = (\n    { nativeEvent: { selections, pid } }: UIPickerSelectionsEvent,\n  ): void => {\n    const promise = this.promiseFactory.get(pid);\n    if (promise) {\n      promise.resolve(selections);\n      this.promiseFactory.delete(pid);\n    }\n  };\n}\n","import React, { Component, ReactElement, ReactNode } from 'react';\nimport {\n  Platform,\n  Modal,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  FlatList,\n  View,\n  Text,\n  NativeSyntheticEvent,\n  NativeScrollEvent,\n  TextStyle,\n  ViewStyle,\n} from 'react-native';\nimport * as Animatable from 'react-native-animatable';\nimport { defaultProps, propTypes } from './SegmentedPickerPropTypes';\nimport styles from './SegmentedPickerStyles';\nimport Toolbar from '../Toolbar';\nimport SelectionMarker from '../SelectionMarker';\nimport UIPicker from '../UIPicker';\nimport Cache from '../../services/Cache';\nimport UIPickerManager from '../../services/UIPickerManager';\nimport {\n  PickerColumn,\n  PickerItem,\n  PickerOptions,\n  Selections,\n  SelectionEvent,\n  UIPickerValueChangeEvent,\n} from '../../config/interfaces';\nimport {\n  ANIMATION_TIME,\n  GUTTER_HEIGHT,\n  ITEM_HEIGHTS,\n  TEST_IDS,\n  TRACKING,\n} from '../../config/constants';\n\nconst ITEM_HEIGHT = Platform.select(ITEM_HEIGHTS);\n\nconst {\n  FLAT_LIST_REF,\n  LAST_SCROLL_OFFSET,\n  SCROLL_DIRECTION,\n  IS_DRAGGING,\n  IS_MOMENTUM_SCROLLING,\n  IS_DIRTY,\n} = TRACKING;\n\nexport interface Props {\n  native: boolean;\n  options: PickerOptions;\n  visible: boolean;\n  defaultSelections: Selections;\n  size: number;\n  confirmText: string;\n  nativeTestID: string;\n  // Styling\n  confirmTextColor: string;\n  pickerItemTextColor: string;\n  toolbarBackgroundColor: string;\n  toolbarBorderColor: string;\n  selectionBackgroundColor: string;\n  selectionBorderColor: string;\n  backgroundColor: string;\n  textConfirmStyle: TextStyle;\n  textCancelStyle: TextStyle;\n  textTitleStyle: TextStyle;\n  cancelText: string;\n  title: string;\n  toolbarContainerStyle: ViewStyle;\n  pickerContainerStyle: ViewStyle;\n  extentionComponent: ReactNode;\n  // Events\n  onValueChange: (event: SelectionEvent) => void;\n  onCancel: (event: Selections) => void;\n  onConfirm: (event: Selections) => void;\n}\n\ninterface State {\n  visible: boolean;\n  pickersHeight: number;\n}\n\ninterface RenderablePickerItem extends PickerItem {\n  key: string;\n  column: string;\n}\n\nexport default class SegmentedPicker extends Component<Props, State> {\n  static propTypes = propTypes;\n  static defaultProps = defaultProps as Partial<Props>;\n\n  /**\n   * @static\n   * Decorates the `options` prop with necessary defaults for missing values.\n   * @param options {PickerOptions}\n   * @return {PickerOptions}\n   */\n  static ApplyPickerOptionDefaults = (options: PickerOptions): PickerOptions =>\n    options.map((column) => ({\n      ...column,\n      flex: column.flex || 1,\n    }));\n\n  cache: Cache = new Cache(); // Used as an internal synchronous state (fast)\n  uiPickerManager: UIPickerManager = new UIPickerManager();\n  selectionChanges: Selections = {};\n  modalContainerRef: React.RefObject<any> = React.createRef();\n  pickerContainerRef: React.RefObject<any> = React.createRef();\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      visible: false,\n      pickersHeight: 0,\n    };\n  }\n\n  /**\n   * Used in rare circumstances where this component is mounted with the `visible`\n   * prop set to true. We must animate the picker in immediately.\n   */\n  componentDidMount(): void {\n    if (this.props.visible === true) {\n      this.show();\n    }\n  }\n\n  /**\n   * Animates in-and-out when toggling picker visibility with the `visible` prop.\n   */\n  componentDidUpdate(prevProps: Props): void {\n    const { visible: visibleProp } = this.props;\n    const { visible: visibleState } = this.state;\n    if (\n      visibleProp === true &&\n      prevProps.visible !== true &&\n      visibleState !== true\n    ) {\n      this.show();\n    }\n    if (visibleProp === false && prevProps.visible === true) {\n      this.hide();\n    }\n  }\n\n  /**\n   * Make the picker visible on the screen.\n   * External Usage: `ref.current.show()`\n   * @return {Promise<void>}\n   */\n  show = (): Promise<void> => {\n    this.setState({ visible: true });\n    return new Promise((resolve) => setTimeout(resolve, ANIMATION_TIME));\n  };\n\n  /**\n   * Hide the picker from the screen.\n   * External Usage: `ref.current.hide()`\n   * @return {Promise<void>}\n   */\n  hide = async (): Promise<void> =>\n    new Promise(async (resolve) => {\n      if (Platform.OS === 'ios') {\n        this.setState({ visible: false }, async () => {\n          await new Promise((done) => setTimeout(done, ANIMATION_TIME));\n          this.cache.purge();\n          resolve();\n        });\n      } else {\n        await this.modalContainerRef.current?.fadeOut(ANIMATION_TIME);\n        this.setState({ visible: false }, () => {\n          this.cache.purge();\n          resolve();\n        });\n      }\n    });\n\n  /**\n   * Selects a specific picker item `label` in the picklist and focuses it.\n   * External Usage: `ref.current.selectLabel()`\n   * @param {string} label\n   * @param {string} column\n   * @param {boolean = true} animated\n   * @param {boolean = true} emitEvent: Specify whether to call the `onValueChange` event.\n   * @param {boolean = false} zeroFallback: Select the first list item if not found.\n   * @return {void}\n   */\n  selectLabel = (\n    label: string,\n    column: string,\n    animated: boolean = true,\n    emitEvent: boolean = true,\n    zeroFallback: boolean = false,\n  ): void => {\n    const index = this.findItemIndexByLabel(label, column);\n    if (index !== -1) {\n      this.selectIndex(index, column, animated, emitEvent);\n    } else if (this.columnItems(column).length > 0 && zeroFallback) {\n      this.selectIndex(0, column, animated, emitEvent);\n    }\n  };\n\n  /**\n   * Selects a specific picker item `value` in the picklist and focuses it.\n   * External Usage: `ref.current.selectValue()`\n   * @param {string} value\n   * @param {string} column\n   * @param {boolean = true} animated\n   * @param {boolean = true} emitEvent: Specify whether to call the `onValueChange` event.\n   * @param {boolean = false} zeroFallback: Select the first list item if not found.\n   * @return {void}\n   */\n  selectValue = (\n    value: string,\n    column: string,\n    animated: boolean = true,\n    emitEvent: boolean = true,\n    zeroFallback: boolean = false,\n  ): void => {\n    const index = this.findItemIndexByValue(value, column);\n    if (index !== -1) {\n      this.selectIndex(index, column, animated, emitEvent);\n    } else if (this.columnItems(column).length > 0 && zeroFallback) {\n      this.selectIndex(0, column, animated, emitEvent);\n    }\n  };\n\n  /**\n   * Selects a specific label in the picklist and focuses it using it's list index.\n   * External Usage: `ref.current.selectLabel()`\n   * @param {number} index\n   * @param {string} column\n   * @param {boolean = true} animated\n   * @param {boolean = true} emitEvent: Specify whether to call the `onValueChange` event.\n   * @return {void}\n   */\n  selectIndex = (\n    index: number,\n    column: string,\n    animated: boolean = true,\n    emitEvent: boolean = true,\n  ): void => {\n    if (this.isNative()) {\n      this.uiPickerManager.selectIndex(index, column, animated);\n      return;\n    }\n    const { onValueChange } = this.props;\n    const list = this.cache.get(`${FLAT_LIST_REF}${column}`);\n    if (!list) {\n      return;\n    }\n    list.scrollToIndex({\n      index,\n      animated,\n    });\n    const items = this.columnItems(column);\n    if (\n      !this.selectionChanges[column] ||\n      (this.selectionChanges[column] &&\n        this.selectionChanges[column] !== items[index].value)\n    ) {\n      this.selectionChanges = {\n        ...this.selectionChanges,\n        [column]: items[index].value,\n      };\n      if (emitEvent) {\n        onValueChange({ column, value: items[index].value });\n      }\n    }\n  };\n\n  /**\n   * Returns the current picklist selections as they appear on the UI.\n   * External Usage: `await ref.current.getCurrentSelections()`\n   * @return {Promise<Selections>} {column1: 'value', column2: 'value', ...}\n   */\n  getCurrentSelections = async (): Promise<Selections> => {\n    if (this.isNative()) {\n      const nativeSelections =\n        await this.uiPickerManager.getCurrentSelections();\n      return nativeSelections;\n    }\n    const { options } = this.props;\n    return Promise.resolve(\n      options.reduce((columns, column) => {\n        const lastOffset = this.cache.get(`${LAST_SCROLL_OFFSET}${column.key}`);\n        const index = this.nearestOptionIndex(lastOffset || 0, column.key);\n        const items = this.columnItems(column.key);\n        return {\n          ...columns,\n          [column.key]: items[index]?.value,\n        };\n      }, {}),\n    );\n  };\n\n  /**\n   * @private\n   * Should the picker be powered by a native module, or with plain JavaScript?\n   * Currently only available as an opt-in option for iOS devices.\n   * @return {boolean}\n   */\n  private isNative = (): boolean => this.props.native && Platform.OS === 'ios';\n\n  /**\n   * Filters the `options` prop for a specific column `key`.\n   * @param {string} key\n   * @return {PickerColumn}\n   */\n  private getColumn = (key: string): PickerColumn =>\n    this.props.options.filter((c) => c.key === key)[0];\n\n  /**\n   * Returns the picker list items for a specific column `key`.\n   * @param {string} key\n   * @return {Array<PickerItem>}\n   */\n  private columnItems = (key: string): Array<PickerItem> =>\n    this.getColumn(key)?.items || [];\n\n  /**\n   * @private\n   * @param {string} label\n   * @param {string} column\n   * @return {number}\n   */\n  private findItemIndexByLabel = (label: string, column: string): number => {\n    const items = this.columnItems(column);\n    return items.findIndex((item) => item.label === label);\n  };\n\n  /**\n   * @private\n   * @param {string} value\n   * @param {string} column\n   * @return {number}\n   */\n  private findItemIndexByValue = (value: string, column: string): number => {\n    const items = this.columnItems(column);\n    return items.findIndex((item) => item.value === value);\n  };\n\n  /**\n   * @private\n   * Focuses the default picklist selections.\n   * @return {void}\n   */\n  private setDefaultSelections = (): void => {\n    const { options, defaultSelections } = this.props;\n    const dirty = this.cache.get(IS_DIRTY);\n    if (!dirty) {\n      setTimeout(() => {\n        // User defined default selections\n        Object.keys(defaultSelections).forEach((column) =>\n          this.selectValue(\n            defaultSelections[column],\n            column,\n            false,\n            false,\n            true,\n          ),\n        );\n\n        // Set all other selections to index 0\n        options\n          .filter(\n            (column) =>\n              !Object.keys(defaultSelections).includes(column.key) &&\n              this.columnItems(column.key).length > 0,\n          )\n          .forEach((column) => this.selectIndex(0, column.key, false, false));\n      }, 0);\n    }\n  };\n\n  /**\n   * @private\n   * @param {string} column\n   * @param {object} ref: The column's rendered FlatList component.\n   * @return {void}\n   */\n  private setFlatListRef = (\n    column: string,\n    ref: FlatList<any> | null,\n  ): void => {\n    if (ref) {\n      this.cache.set(`${FLAT_LIST_REF}${column}`, ref);\n      this.setDefaultSelections();\n    }\n  };\n\n  /**\n   * @private\n   * @return {void}\n   */\n  private measurePickersHeight = (event: any): void => {\n    const { height } = event.nativeEvent.layout;\n    this.setState({ pickersHeight: height });\n  };\n\n  /**\n   * @private\n   * Calculates the padding top and bottom for the pickers so that the first and\n   * last list items are centered in the marker when fully scrolled up or down.\n   * @return {number}\n   */\n  private pickersVerticalPadding = (): number => {\n    const { pickersHeight } = this.state;\n    return (pickersHeight - ITEM_HEIGHT - GUTTER_HEIGHT * 2) / 2;\n  };\n\n  /**\n   * @private\n   * Determines the index of the nearest option in the list based off the specified Y\n   * scroll offset.\n   * @param {number} offsetY: The scroll view content offset from react native (should\n   * always be a positive integer).\n   * @param {string} column\n   * @return {number}\n   */\n  private nearestOptionIndex = (offsetY: number, column: string): number => {\n    const scrollDirection = this.cache.get(`${SCROLL_DIRECTION}${column}`) || 1;\n    const rounding = scrollDirection === 0 ? 'floor' : 'ceil';\n    const adjustedOffsetY =\n      scrollDirection === 0\n        ? offsetY / ITEM_HEIGHT + 0.35\n        : offsetY / ITEM_HEIGHT - 0.35;\n    let nearestArrayMember = Math[rounding](adjustedOffsetY) || 0;\n    // Safety checks making sure we don't return an out of range index\n    const columnSize = this.columnItems(column).length;\n    if (Math.sign(nearestArrayMember) === -1) {\n      nearestArrayMember = 0;\n    } else if (nearestArrayMember > columnSize - 1) {\n      nearestArrayMember = columnSize - 1;\n    }\n    return nearestArrayMember;\n  };\n\n  /**\n   * @private\n   * Calculates the current scroll direction based off the last and current Y offsets.\n   * @param {NativeSyntheticEvent<NativeScrollEvent>} event: Event details from React Native.\n   * @param {string} column\n   * @return {void}\n   */\n  private onScroll = (\n    event: NativeSyntheticEvent<NativeScrollEvent>,\n    column: string,\n  ): void => {\n    if (!event.nativeEvent) return;\n    const { y } = event.nativeEvent.contentOffset;\n    const lastScrollOffset = this.cache.get(`${LAST_SCROLL_OFFSET}${column}`);\n    if (lastScrollOffset !== null && lastScrollOffset < y) {\n      this.cache.set(`${SCROLL_DIRECTION}${column}`, 1); // Down\n    } else {\n      this.cache.set(`${SCROLL_DIRECTION}${column}`, 0); // Up\n    }\n    this.cache.set(`${LAST_SCROLL_OFFSET}${column}`, y);\n  };\n\n  /**\n   * @private\n   * @param {string} column\n   * @return {void}\n   */\n  private onScrollBeginDrag = (column: string): void => {\n    this.cache.set(`${IS_DRAGGING}${column}`, true);\n    const dirty = this.cache.get(IS_DIRTY);\n    if (!dirty) {\n      this.cache.set(IS_DIRTY, true);\n    }\n  };\n\n  /**\n   * @private\n   * @param {NativeSyntheticEvent<NativeScrollEvent>} event: Event details from React Native.\n   * @param {string} column\n   * @return {void}\n   */\n  private onScrollEndDrag = (\n    event: NativeSyntheticEvent<NativeScrollEvent>,\n    column: string,\n  ): void => {\n    this.cache.set(`${IS_DRAGGING}${column}`, false);\n    if (\n      Platform.OS === 'ios' &&\n      !this.cache.get(`${IS_MOMENTUM_SCROLLING}${column}`)\n    ) {\n      // Not required on Android because all scrolls exit as momentum scrolls,\n      // so the below method has already been called prior to this event.\n      // Timeout is to temporarily allow raising fingers.\n      this.selectIndexFromScrollPosition(event, column, 280);\n    }\n  };\n\n  /**\n   * @private\n   * @param {object} event: Event details from React Native.\n   * @param {string} column\n   * @return {void}\n   */\n  private onMomentumScrollBegin = (\n    event: NativeSyntheticEvent<NativeScrollEvent>,\n    column: string,\n  ): void => {\n    this.cache.set(`${IS_MOMENTUM_SCROLLING}${column}`, true);\n  };\n\n  /**\n   * @private\n   * @param {NativeSyntheticEvent<NativeScrollEvent>} event: Event details from React Native.\n   * @param {string} column\n   * @return {void}\n   */\n  private onMomentumScrollEnd = (\n    event: NativeSyntheticEvent<NativeScrollEvent>,\n    column: string,\n  ): void => {\n    this.cache.set(`${IS_MOMENTUM_SCROLLING}${column}`, false);\n    if (Platform.OS === 'ios') {\n      event.persist();\n      this.selectIndexFromScrollPosition(event, column, 50);\n    } else {\n      this.selectIndexFromScrollPosition(event, column);\n    }\n  };\n\n  /**\n   * @private\n   * Scrolls to the nearest index based off a y offset from the FlatList.\n   * @param {NativeSyntheticEvent<NativeScrollEvent>} event: Event details from React Native.\n   * @param {string} column\n   * @param {number?} delay\n   * @return {void}\n   */\n  private selectIndexFromScrollPosition = (\n    event: NativeSyntheticEvent<NativeScrollEvent>,\n    column: string,\n    delay: number = 0,\n  ): void => {\n    if (!event.nativeEvent) return;\n    const { y } = event.nativeEvent.contentOffset;\n    const nearestOptionIndex = this.nearestOptionIndex(y, column);\n    setTimeout(() => {\n      const isDragging = this.cache.get(`${IS_DRAGGING}${column}`);\n      const isMomentumScrolling = this.cache.get(\n        `${IS_MOMENTUM_SCROLLING}${column}`,\n      );\n      if (!isDragging && !isMomentumScrolling) {\n        this.selectIndex(nearestOptionIndex, column);\n      }\n    }, delay);\n  };\n\n  /**\n   * @private\n   * This method is called when the picker is closed unexpectedly without pressing the\n   * \"Done\" button in the top right hand corner.\n   * @return {Promise<void>}\n   */\n  private onCancel = async (): Promise<void> => {\n    const selections = { ...(await this.getCurrentSelections()) };\n    if (this.props.visible !== true) {\n      await this.hide();\n    }\n    this.props.onCancel(selections);\n  };\n\n  /**\n   * @private\n   * This method is called when the right action button (default: \"Done\") is tapped.\n   * It calls the `onConfirm` method and hides the picker.\n   * @return {Promise<void>}\n   */\n  private onConfirm = async (): Promise<void> => {\n    const selections = { ...(await this.getCurrentSelections()) };\n    if (this.props.visible !== true) {\n      await this.hide();\n    }\n    this.props.onConfirm(selections);\n  };\n\n  /**\n   * @private\n   * Used by the FlatList to render picklist items.\n   * @return {ReactElement}\n   */\n  private renderPickerItem = ({\n    item: { label, column, key, testID },\n    index,\n  }: {\n    item: RenderablePickerItem;\n    index: number;\n  }): ReactElement => {\n    const { pickerItemTextColor } = this.props;\n    return (\n      <View style={styles.pickerItem}>\n        <TouchableOpacity\n          activeOpacity={0.7}\n          onPress={() => this.selectIndex(index, column)}\n          testID={testID || key}>\n          <Text\n            numberOfLines={1}\n            style={[styles.pickerItemText, { color: pickerItemTextColor }]}>\n            {label}\n          </Text>\n        </TouchableOpacity>\n      </View>\n    );\n  };\n\n  /**\n   * @private\n   * Forwards value changes onto the client from the Native iOS UIPicker when it is in use\n   * over the default JavaScript picker implementation.\n   * @param {UIPickerValueChangeEvent}\n   * @return {void}\n   */\n  private uiPickerValueChange = ({\n    nativeEvent: { column, value },\n  }: UIPickerValueChangeEvent): void => {\n    const { onValueChange } = this.props;\n    onValueChange({ column, value });\n  };\n\n  render() {\n    const { visible } = this.state;\n    const {\n      nativeTestID,\n      options,\n      defaultSelections,\n      size,\n      confirmText,\n      confirmTextColor,\n      pickerItemTextColor,\n      toolbarBackgroundColor,\n      toolbarBorderColor,\n      selectionBackgroundColor,\n      selectionBorderColor,\n      backgroundColor,\n      textConfirmStyle,\n      textCancelStyle,\n      textTitleStyle,\n      cancelText,\n      title,\n      toolbarContainerStyle,\n      pickerContainerStyle,\n      extentionComponent,\n    } = this.props;\n\n    return (\n      <Modal\n        visible={visible}\n        animationType={Platform.select({\n          ios: 'fade',\n          default: 'none',\n        })}\n        transparent\n        onRequestClose={this.onCancel}>\n        <Animatable.View\n          useNativeDriver\n          animation=\"fadeIn\"\n          easing=\"ease-out-cubic\"\n          duration={ANIMATION_TIME}\n          ref={this.modalContainerRef}\n          style={styles.modalContainer}\n          testID={TEST_IDS.PICKER}>\n          <TouchableWithoutFeedback\n            onPress={this.onCancel}\n            testID={TEST_IDS.CLOSE_AREA}>\n            <View\n              style={[\n                styles.closeableContainer,\n                { height: `${100 - size * 100}%` },\n              ]}\n            />\n          </TouchableWithoutFeedback>\n\n          <Animatable.View\n            useNativeDriver\n            animation={{\n              from: { opacity: 0, translateY: 250 },\n              to: { opacity: 1, translateY: 0 },\n            }}\n            easing=\"ease-out-quint\"\n            delay={100}\n            duration={ANIMATION_TIME}\n            ref={this.pickerContainerRef}\n            style={[\n              styles.pickerContainer,\n              { height: `${size * 100}%`, backgroundColor },\n              pickerContainerStyle,\n            ]}>\n            <Toolbar\n              confirmText={confirmText}\n              cancelText={cancelText}\n              confirmTextColor={confirmTextColor}\n              toolbarBackground={toolbarBackgroundColor}\n              toolbarBorderColor={toolbarBorderColor}\n              textConfirmStyle={textConfirmStyle}\n              textCancelStyle={textCancelStyle}\n              textTitleStyle={textTitleStyle}\n              toolbarContainerStyle={toolbarContainerStyle}\n              onConfirm={this.onConfirm}\n              onCancel={this.onCancel}\n              title={title}\n            />\n            <View style={styles.selectableArea}>\n              {/* Native iOS Picker is enabled */}\n              {this.isNative() && (\n                <View style={styles.nativePickerContainer}>\n                  <UIPicker\n                    ref={this.uiPickerManager.reactRef}\n                    nativeTestID={nativeTestID}\n                    style={styles.nativePicker}\n                    options={SegmentedPicker.ApplyPickerOptionDefaults(options)}\n                    defaultSelections={defaultSelections}\n                    onValueChange={this.uiPickerValueChange}\n                    onEmitSelections={this.uiPickerManager.ingestSelections}\n                    theme={{\n                      itemHeight: ITEM_HEIGHT,\n                      selectionBackgroundColor,\n                      selectionBorderColor,\n                      pickerItemTextColor,\n                    }}\n                  />\n                </View>\n              )}\n\n              {/* Plain JavaScript implementation (default) */}\n              {!this.isNative() && (\n                <>\n                  <SelectionMarker\n                    backgroundColor={selectionBackgroundColor}\n                    borderColor={selectionBorderColor}\n                  />\n                  <View\n                    style={styles.pickerColumns}\n                    onLayout={this.measurePickersHeight}>\n                    {SegmentedPicker.ApplyPickerOptionDefaults(options).map(\n                      ({ key: column, testID: columnTestID, flex }) => (\n                        <View\n                          style={[styles.pickerColumn, { flex }]}\n                          key={`${column}`}>\n                          <View style={styles.pickerList}>\n                            <FlatList\n                              data={this.columnItems(column).map(\n                                ({ label, value, key, testID }) => ({\n                                  label,\n                                  value,\n                                  column,\n                                  testID,\n                                  key: `${column}_${key || label}`,\n                                }),\n                              )}\n                              renderItem={this.renderPickerItem}\n                              keyExtractor={(item) => item.key}\n                              initialNumToRender={40}\n                              getItemLayout={(data, index) => ({\n                                length: ITEM_HEIGHT,\n                                offset: ITEM_HEIGHT * index,\n                                index,\n                              })}\n                              contentContainerStyle={{\n                                paddingTop: this.pickersVerticalPadding(),\n                                paddingBottom: this.pickersVerticalPadding(),\n                              }}\n                              showsVerticalScrollIndicator={false}\n                              ref={(ref) => this.setFlatListRef(column, ref)}\n                              onScroll={(event) => this.onScroll(event, column)}\n                              onScrollBeginDrag={() =>\n                                this.onScrollBeginDrag(column)\n                              }\n                              onScrollEndDrag={(event) =>\n                                this.onScrollEndDrag(event, column)\n                              }\n                              onMomentumScrollBegin={(event) =>\n                                this.onMomentumScrollBegin(event, column)\n                              }\n                              onMomentumScrollEnd={(event) =>\n                                this.onMomentumScrollEnd(event, column)\n                              }\n                              scrollEventThrottle={32}\n                              decelerationRate={Platform.select({\n                                ios: 1,\n                                android: undefined,\n                              })}\n                              testID={`${columnTestID}`}\n                            />\n                          </View>\n                        </View>\n                      ),\n                    )}\n                  </View>\n                </>\n              )}\n            </View>\n            {extentionComponent && extentionComponent}\n          </Animatable.View>\n        </Animatable.View>\n      </Modal>\n    );\n  }\n}\n"],"names":["defaultProps","native","options","visible","defaultSelections","size","confirmText","nativeTestID","undefined","confirmTextColor","pickerItemTextColor","toolbarBackgroundColor","toolbarBorderColor","selectionBackgroundColor","selectionBorderColor","backgroundColor","onValueChange","onCancel","onConfirm","textConfirmStyle","textCancelStyle","textTitleStyle","toolbarContainerStyle","pickerContainerStyle","cancelText","title","propTypes","PropTypes","arrayOf","shape","key","string","isRequired","items","label","value","testID","flex","number","bool","objectOf","propValue","componentName","location","propName","column","String","Error","props","object","extentionComponent","node","func","ANIMATION_TIME","GUTTER_WIDTH","GUTTER_HEIGHT","ITEM_HEIGHTS","ios","default","TEXT_CORRECTION","TEST_IDS","PICKER","CONFIRM_BUTTON","CLOSE_AREA","TRACKING","FLAT_LIST_REF","LAST_SCROLL_OFFSET","SCROLL_DIRECTION","IS_DRAGGING","IS_MOMENTUM_SCROLLING","IS_DIRTY","ITEM_HEIGHT","Platform","select","StyleSheet","create","modalContainer","width","height","flexDirection","closeableContainer","pickerContainer","alignItems","selectableArea","alignSelf","pickerColumns","paddingTop","paddingRight","paddingBottom","paddingLeft","pickerColumn","marginRight","position","pickerList","pickerItem","justifyContent","pickerItemText","fontSize","textAlign","nativePickerContainer","Dimensions","get","marginLeft","nativePicker","toolbarContainer","borderBottomWidth","toolbarConfirmContainer","toolbarConfirmText","fontWeight","toolbarBackground","styles","borderBottomColor","selectionMarkerContainer","top","left","selectionMarkerBorder","android","selectionMarker","borderColor","requireNativeComponent","Cache","constructor","initialState","store","current","PromiseFactory","Map","e","id","Number","nextPromiseId","promises","set","delete","UIPickerManager","React","createRef","index","animated","ref","UIManager","dispatchViewManagerCommand","findNodeHandle","UIPicker","Commands","selectIndex","Promise","resolve","promise","reject","pid","promiseFactory","add","emitSelections","nativeEvent","selections","reactRef","SegmentedPicker","Component","setState","setTimeout","OS","done","cache","purge","modalContainerRef","fadeOut","emitEvent","zeroFallback","findItemIndexByLabel","columnItems","length","findItemIndexByValue","isNative","uiPickerManager","list","scrollToIndex","selectionChanges","nativeSelections","getCurrentSelections","reduce","columns","lastOffset","nearestOptionIndex","filter","c","getColumn","findIndex","item","dirty","Object","keys","forEach","selectValue","includes","setDefaultSelections","event","layout","pickersHeight","state","offsetY","scrollDirection","rounding","adjustedOffsetY","nearestArrayMember","Math","columnSize","sign","y","contentOffset","lastScrollOffset","selectIndexFromScrollPosition","persist","delay","isDragging","isMomentumScrolling","hide","color","componentDidMount","show","componentDidUpdate","prevProps","visibleProp","visibleState","render","Animatable.View","from","opacity","translateY","to","pickerContainerRef","ApplyPickerOptionDefaults","uiPickerValueChange","ingestSelections","itemHeight","measurePickersHeight","map","columnTestID","renderPickerItem","data","offset","pickersVerticalPadding","setFlatListRef","onScroll","onScrollBeginDrag","onScrollEndDrag","onMomentumScrollBegin","onMomentumScrollEnd"],"mappings":"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"}